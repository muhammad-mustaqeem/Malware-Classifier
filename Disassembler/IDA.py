import subprocess
import os
import time
import sys
import shutil
import pathlib
import fnmatch


class IdaPython:
    def __init__(self):
        self.executableFilesPath = "./Input/EXE File/"
        self.newAsmDirectoryPath = "./Input/ASM File/"
        self.executableFiles = []

    # Module to execute IDA cmd command and generate ASM file
    def generateASM(self, filePath):
        commandArguments = ["C:/Program Files (x86)/IDA 6.5/idaq.exe", "-B", ""]
        commandArguments[2] = filePath
        subprocess.call(commandArguments)

    # Module to move ASM file(s) from executable directory to a separate directory
    def moveAsmToNewDir(self):
        if not os.path.isdir(self.newAsmDirectoryPath):
            pathlib.Path(self.newAsmDirectoryPath).mkdir(parents=True, exist_ok=True)
        for files in fnmatch.filter(os.listdir(self.executableFilesPath), "*.asm"):
            shutil.move(os.path.join(self.executableFilesPath, files), os.path.join(self.newAsmDirectoryPath, files))

    # Module to delete the .idb files from the executabe file(s) directory
    def deleteIdbFiles(self):
        for files in fnmatch.filter(os.listdir(self.executableFilesPath), "*.idb"):
            os.remove(os.path.join(self.executableFilesPath, files))

    def DisassembleFile(self):
        self.executableFiles = os.listdir(self.executableFilesPath)
        if len(self.executableFiles) == 0:
            return 0
        end = len(self.executableFiles)
        TotalTime = 0
        for file in range(0, end):
            start = time.time()
            filePath = os.path.join(self.executableFilesPath, self.executableFiles[file])
            self.generateASM(filePath)
            ending = time.time()
            TotalTime = TotalTime + (ending - start)
            AVGTime = ((TotalTime / (file + 1)) * end) / 60
            sys.stdout.flush()
            print(f"\rGenerated : {(file+1)} / {end}\t\tCompleted : {round(((file+1)/end)*100,2)}%\t\tETA = {round((AVGTime - (TotalTime/60)),2)} min\t\tElapsed = {round((TotalTime/60),2)} min  ",end="")
            start = ending = 0

        self.deleteIdbFiles()
        self.moveAsmToNewDir()